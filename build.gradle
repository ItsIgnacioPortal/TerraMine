plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.6.1'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

repositories {
    maven { url = "https://maven.terraformersmc.com" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://maven.gegy.dev/" }
    maven {
        url = "https://maven.florens.be"
        content {
            includeGroup "be.florens"
        }
    }
    maven { url = "https://maven.parchmentmc.org" }
    maven {
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { // Leave this as lowest priority
        url = "https://jitpack.io"
        content {
            includeGroupByRegex "com.github.*"
        }
    }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven { url = 'https://maven.minecraftforge.net/' }
}

allprojects { repositories { maven { url 'https://jitpack.io' } } }

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version + '+' + project.minecraft_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/terracraft.accesswidener")
}

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    //mappings loom.layered() {
    //    officialMojangMappings()
    //    parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
    //}
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Dependencies
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}+${minecraft_version}"
    modImplementation("dev.emi:trinkets:${project.trinkets_version}") {
        transitive = false
    }
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}")
    modImplementation include("be.florens:expandability-fabric:${project.expandability_version}")
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    //modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}+${minecraft_version}") // keep if using for chests, otherwise yeet
    modImplementation "com.github.glitchfiend:TerraBlender-fabric:${minecraft_version}-${terrablender_version}"
    modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:2.1.1")
    modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:${project.fabric_shield_lib_version}"
    modImplementation include("com.github.emilyploszaj:step-height-entity-attribute:${project.step_height_attr_version}") {
        transitive = false
    }

    // Optional
    modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") {
        transitive = false
    }
    modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modImplementation("dev.lambdaurora:lambdynamiclights:${project.lambda_dynamic_lights_version}")

    // Compat
    modCompileOnly("com.github.apace100:origins-fabric:v${project.origins_version}") {
        transitive = false
    }
    modCompileOnly("com.github.apace100:apoli:v${project.apoli_version}") {
        transitive = false
    }
    modCompileOnly("com.github.apace100:calio:v${project.calio_version}") {
        transitive = false
    }
    modCompileOnly("curse.maven:haema-391257:${project.haema_version}") {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

curseforge {
    if (System.getenv("CURSE_API_KEY") != null) {
        apiKey = System.getenv("CURSE_API_KEY")

        project {
            id = "401236"
            releaseType = "release"

            changelogType = "markdown"
            //changelog = System.getenv("CHANGELOG") ?: "https://github.com/florensie/terracraft-fabric/blob/master/CHANGELOG.md"

            addGameVersion "1.18"
            addGameVersion "1.18.1"
            addGameVersion "Fabric"
            relations {
                requiredDependency "fabric-api"
                requiredDependency "cloth-config"
                requiredDependency "trinkets-fabric"
                embeddedLibrary "cardinal-components"
                embeddedLibrary "expandability"
                optionalDependency "modmenu"
            }

            mainArtifact(remapJar.archiveFile) {
                displayName = "${project.mod_version} for Minecraft 1.18-18.2"
            }

            afterEvaluate {
                uploadTask.dependsOn("build")
            }
        }
    }

    options {
        forgeGradleIntegration = false
    }
}
